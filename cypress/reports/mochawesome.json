{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-08T20:10:11.154Z",
    "end": "2021-07-08T20:11:41.152Z",
    "duration": 89998,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9eb8be14-f3fc-4af5-8cba-d86336b70ac9",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d196e0f8-f9be-4cb4-8539-80c9106f0d16",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "86ebd1be-4440-4246-a5be-a640d265acd2",
              "parentUUID": "d196e0f8-f9be-4cb4-8539-80c9106f0d16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86ebd1be-4440-4246-a5be-a640d265acd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad327830-1386-4478-b805-72dcb6ca1cbe",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "18b9a59b-4f2f-481d-a09e-bbab7fed2d67",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "59290017-1a64-4aa7-8753-2382ad9dee7e",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "64da27a8-fea5-4dce-99cb-c20687fb22c3",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "e809c714-e09b-4a61-80c1-a4ef0388d065",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "77df9b7a-6de1-42fd-88cc-699ddc4e3d15",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3684c3b3-9d44-431f-aa37-85d885543782",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f98ed15d-9504-4c96-bdfa-b31e9d2f18e3",
              "parentUUID": "ad327830-1386-4478-b805-72dcb6ca1cbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18b9a59b-4f2f-481d-a09e-bbab7fed2d67",
            "59290017-1a64-4aa7-8753-2382ad9dee7e",
            "64da27a8-fea5-4dce-99cb-c20687fb22c3",
            "e809c714-e09b-4a61-80c1-a4ef0388d065",
            "77df9b7a-6de1-42fd-88cc-699ddc4e3d15",
            "3684c3b3-9d44-431f-aa37-85d885543782",
            "f98ed15d-9504-4c96-bdfa-b31e9d2f18e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95c73e67-051b-4107-b4aa-e1001ad18d18",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5001aff6-467e-4bc9-a433-dd69adfe3c85",
              "parentUUID": "95c73e67-051b-4107-b4aa-e1001ad18d18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1eb3352e-5b08-4888-9160-1ee8689a7a6a",
              "parentUUID": "95c73e67-051b-4107-b4aa-e1001ad18d18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5001aff6-467e-4bc9-a433-dd69adfe3c85",
            "1eb3352e-5b08-4888-9160-1ee8689a7a6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82b4baeb-41e8-4d98-9a45-33c574c21ca3",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "5c5af2a1-2b9b-4113-ac29-909facdd2d49",
              "parentUUID": "82b4baeb-41e8-4d98-9a45-33c574c21ca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e3e3051e-2faf-4767-90c5-d3be37a89d81",
              "parentUUID": "82b4baeb-41e8-4d98-9a45-33c574c21ca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "b9564f51-4b1f-462d-b6f1-0bc47680e350",
              "parentUUID": "82b4baeb-41e8-4d98-9a45-33c574c21ca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "3532e901-7ba3-4e13-901b-7c1ec6d492ab",
              "parentUUID": "82b4baeb-41e8-4d98-9a45-33c574c21ca3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c5af2a1-2b9b-4113-ac29-909facdd2d49",
            "e3e3051e-2faf-4767-90c5-d3be37a89d81",
            "b9564f51-4b1f-462d-b6f1-0bc47680e350",
            "3532e901-7ba3-4e13-901b-7c1ec6d492ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6887e848-720c-46fa-9105-ea1c118a9e29",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "49e41071-ed7d-4a27-9cb8-b6917d10ea38",
              "parentUUID": "6887e848-720c-46fa-9105-ea1c118a9e29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "0847eecd-52c2-4108-9aeb-0bb6bd18dc35",
              "parentUUID": "6887e848-720c-46fa-9105-ea1c118a9e29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49e41071-ed7d-4a27-9cb8-b6917d10ea38",
            "0847eecd-52c2-4108-9aeb-0bb6bd18dc35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3079e601-3909-4402-8b08-272b4de7c4e1",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c0cce989-9b6a-493a-941d-723d155ba48c",
              "parentUUID": "3079e601-3909-4402-8b08-272b4de7c4e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "dcf3e0f1-5442-4406-b3a7-b0be9e22b1ea",
              "parentUUID": "3079e601-3909-4402-8b08-272b4de7c4e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0cce989-9b6a-493a-941d-723d155ba48c",
            "dcf3e0f1-5442-4406-b3a7-b0be9e22b1ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "663d84e5-bf05-4ac8-bc48-7bf364329004",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "683daa95-fff9-4aae-be5e-61dc84155204",
              "parentUUID": "663d84e5-bf05-4ac8-bc48-7bf364329004",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "8e66eddb-4450-4ac6-b4c2-0ccb2d301ea6",
              "parentUUID": "663d84e5-bf05-4ac8-bc48-7bf364329004",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "683daa95-fff9-4aae-be5e-61dc84155204",
            "8e66eddb-4450-4ac6-b4c2-0ccb2d301ea6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10925,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e46e643b-a3f7-4bae-8d33-133341474e30",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2882,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0ccb8c27-8d12-42b4-80a6-1a3d86750761",
              "parentUUID": "e46e643b-a3f7-4bae-8d33-133341474e30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "ef826123-e7ce-4d02-bdbf-0c3f0ddad541",
              "parentUUID": "e46e643b-a3f7-4bae-8d33-133341474e30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "950e112c-580c-465c-aedc-ed7eb97bce93",
              "parentUUID": "e46e643b-a3f7-4bae-8d33-133341474e30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ccb8c27-8d12-42b4-80a6-1a3d86750761",
            "ef826123-e7ce-4d02-bdbf-0c3f0ddad541",
            "950e112c-580c-465c-aedc-ed7eb97bce93"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4823bb47-2d6b-441e-a73e-2882df368eb2",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "1ce7047d-aea8-4d2a-873d-e8643d9b28d6",
              "parentUUID": "4823bb47-2d6b-441e-a73e-2882df368eb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "284d6933-cb22-4974-93ba-803c4b12a3e1",
              "parentUUID": "4823bb47-2d6b-441e-a73e-2882df368eb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c89336b8-9385-4cd9-9da9-a025ab1901fa",
              "parentUUID": "4823bb47-2d6b-441e-a73e-2882df368eb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "79cdd8fd-a99f-4b5b-8a24-3559b72230f7",
              "parentUUID": "4823bb47-2d6b-441e-a73e-2882df368eb2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ce7047d-aea8-4d2a-873d-e8643d9b28d6",
            "284d6933-cb22-4974-93ba-803c4b12a3e1",
            "c89336b8-9385-4cd9-9da9-a025ab1901fa",
            "79cdd8fd-a99f-4b5b-8a24-3559b72230f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3366,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a660676a-ca33-4364-99e1-b14419b3c81c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4634,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "30cfacdd-5d7f-4a79-9f3c-cf3160feedae",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4547,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e717e641-c5c3-4c7a-9826-92db93ed332a",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d01420b3-9066-48d5-81c5-5efc185ca45a",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4502,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a2c07985-028a-4f81-814b-616c7221de32",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4553,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e831d4b1-45c5-47be-b793-eb09f1ab969d",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4471,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a93c6b7b-e146-4c53-becc-902cf85304cc",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4565,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c9e111e3-4d01-4dcb-810e-dab5824e2b33",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ffca18d9-a2e7-4e16-b862-4f6fedb0f21a",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4534,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2bfd07bd-a549-4ea9-820e-dc8b5a685d96",
              "parentUUID": "a660676a-ca33-4364-99e1-b14419b3c81c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "30cfacdd-5d7f-4a79-9f3c-cf3160feedae",
            "e717e641-c5c3-4c7a-9826-92db93ed332a",
            "d01420b3-9066-48d5-81c5-5efc185ca45a",
            "a2c07985-028a-4f81-814b-616c7221de32",
            "e831d4b1-45c5-47be-b793-eb09f1ab969d",
            "a93c6b7b-e146-4c53-becc-902cf85304cc",
            "c9e111e3-4d01-4dcb-810e-dab5824e2b33",
            "ffca18d9-a2e7-4e16-b862-4f6fedb0f21a",
            "2bfd07bd-a549-4ea9-820e-dc8b5a685d96"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5642adb0-9ce3-4abf-9766-65a7aa87f77b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4471,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6428d0fd-638d-4f6e-893d-12bb0baaf35e",
              "parentUUID": "5642adb0-9ce3-4abf-9766-65a7aa87f77b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6d6820e4-025d-4f24-8b97-d6fa2f35248a",
              "parentUUID": "5642adb0-9ce3-4abf-9766-65a7aa87f77b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4514,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34343/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34343/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34343/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34343/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34343/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34343/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c00cf00a-ac95-4edb-8c47-af78628570ee",
              "parentUUID": "5642adb0-9ce3-4abf-9766-65a7aa87f77b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6428d0fd-638d-4f6e-893d-12bb0baaf35e",
            "6d6820e4-025d-4f24-8b97-d6fa2f35248a",
            "c00cf00a-ac95-4edb-8c47-af78628570ee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13517,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e9745e7d-dd5b-4ae3-a0d3-f246f5c06573",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 650,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34343/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34343/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34343/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34343/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34343/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34343/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34343/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f8062fae-0103-4c4f-a2bb-7a33ace83f5f",
              "parentUUID": "e9745e7d-dd5b-4ae3-a0d3-f246f5c06573",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 514,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34343/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34343/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34343/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34343/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34343/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34343/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34343/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34343/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34343/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34343/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34343/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34343/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e4a588ec-882b-4e6c-9507-4725d8224efd",
              "parentUUID": "e9745e7d-dd5b-4ae3-a0d3-f246f5c06573",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f8062fae-0103-4c4f-a2bb-7a33ace83f5f",
            "e4a588ec-882b-4e6c-9507-4725d8224efd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}